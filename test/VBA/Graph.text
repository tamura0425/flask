'###変数定義###
'グラフ作成用ループカウンター
Dim i As Long
Dim x As Long
Dim aa As Long
Dim numGraph As Long
'ワークシート処理用
Dim WS As Worksheet
'最終列取得
Dim EndCol As Long
'ワークシート代入用変数
Dim sh As Worksheet
'データ加工用変数
Dim strJoin As String
'範囲指定用処理
'可視化セルの先頭行と最終行を取得
Dim First_Row As String
Dim Lost_Row As String
'初期値
Dim Count_Cell As Long
'CELL数計算
Dim Number_loops As Long
'CELL数計算
Dim Score_Cell As Long
'日付計算
Dim Date_weight0 As Long
Dim Date_weight1 As Long
Dim Date_weight2 As Long
Dim Date_weight3 As Long
Public Sub MakiGraph()
'「graph」の有無を確認しなければ作成しデータを削除
Delete_sheet
'ワークシートアクティブ
Worksheets.Add
ActiveSheet.Name = "graph"
Sheets("graph").Activate
'シート指定用変数
Set sh = Sheets("data")
'データシートの日付と時間表示の変更
Columns("C").NumberFormatLocal = "m/d"
sh.Columns("D").NumberFormat = "h"
'グラフ移動用変数
Continued = 2
numGraph = 1

'可視化セルの範囲を習得
With sh
    If Not .AutoFilterMode Then Exit Sub
    With Intersect(.AutoFilter.Range.Resize(.AutoFilter.Range.Rows.Count - 1).Offset(1), .Columns("B")).SpecialCells(xlCellTypeVisible)
        First_Row = .Areas(1).Row
        Lost_Row = .Areas(.Areas.Count).Rows(.Areas(.Areas.Count).Rows.Count).Row
    End With
End With
'日付計算
Date_weight1 = 1
For aa = First_Row To Lost_Row Step 25
    If sh.Cells(aa, "B").text = sh.Cells(aa + 24, "B").text Then
        Date_weight1 = Date_weight1 + 1
    Else
         Exit For
    End If
Next aa

'選択CELL数を取得
Number_loops = 1
For aa = First_Row To Lost_Row Step 25
    If sh.Cells(aa, "B").text = sh.Cells(aa + 24, "B").text Then
    Else
        Number_loops = Number_loops + 1
    End If
Next aa

'グラフ作成に必要な最終列を取得
EndCol = sh.Cells(2, Columns.Count).End(xlToLeft).Column
'マイナス１を行うことで最後の一行を削除
Number_loops = Number_loops - 1

'dataシート日付表示変更
For i = 2 To Lost_Row
    If sh.Cells(i, 4) <> 0 Then
    Else
         'strJoin = sh.Cells(i, 4).text & vbLf & Format(sh.Cells(i, 3).text, "m/d")
         strJoin = Format(sh.Cells(i, 3).text, "/m/d/0")
         sh.Cells(i, 4) = strJoin
    End If
Next i

'CELLからループ回数を取得
Score_Cell = Number_loops / 3

'###########グラフ作成
'初期値　セル[F1]の No1_接続成功率(発信＋着信)から開始するため
'外ループグラフを一項目づつ作成するためのループ
'グラフ作成に必要な最終列を取得
EndCol = sh.Cells(2, Columns.Count).End(xlToLeft).Column

'基準値グラフの表示位置を定義
Date_weight0 = Date_weight1 * 24
Date_weight1 = Date_weight0
Date_weight2 = Date_weight1 * 2
Date_weight3 = Date_weight1 * 3

'1つ目の項目開始位置
Count_Cell = 2

For aa = 1 To Score_Cell
    For i = 6 To EndCol
        ActiveSheet.Shapes.AddChart2
        With ActiveSheet.ChartObjects(numGraph).Chart
            'グラフ種類　＝＝　折れ線グラフに設定
            .ChartType = xlLine
            'タイトルを表示
            .HasTitle = True
            'タイトル名取得
            ' .ChartTitle.Text = sh.Cells(1, i)
            .ChartTitle.text = sh.Cells(1, i)
            '凡例の表示有無　有
            .HasLegend = True
            '凡例の表示位置　＝＝上
            .Legend.Position = xlTop
            'X軸のサイズ変更
            .Axes(xlCategory).TickLabels.Font.Size = 12
            
            
        End With
        
        With ActiveSheet.ChartObjects(numGraph).Chart.Axes(xlValue, 1).TickLabels
            .Font.Color = RGB(255, 0, 0) '文字色
        End With
        
        '「X軸のデータ」と「1つ目の系列」を追加
        With ActiveSheet.ChartObjects(numGraph).Chart.SeriesCollection.NewSeries
            'X軸のデータ日時表示
            .XValues = sh.Range(sh.Cells(2, 4), sh.Cells(Date_weight3 + 1, 4))
            'データ範囲
            .Values = sh.Range((sh.Cells(Count_Cell, i).Address), sh.Cells(Date_weight1 + 1, i).Address)
            '系列名
            .Name = sh.Cells(Date_weight1, 2).Value
        
        End With
        
        '「2つ目の系列」を追加
        With ActiveSheet.ChartObjects(numGraph).Chart.SeriesCollection.NewSeries
            'データ範囲
            .Values = sh.Range((sh.Cells(Date_weight1 + 2, i).Address), sh.Cells(Date_weight2 + 1, i).Address)
            '系列名
            .Name = sh.Cells(Date_weight2, 2).Value
        End With
        
        '「3つ目の系列」を追加
        With ActiveSheet.ChartObjects(numGraph).Chart.SeriesCollection.NewSeries
            'データ範囲
            .Values = sh.Range((sh.Cells(Date_weight2 + 2, i).Address), sh.Cells(Date_weight3 + 1, i).Address)
            '系列名
         .Name = sh.Cells(Date_weight3, 2).Value
        End With
        
        'MEIDを表示
        With ActiveSheet.ChartObjects(numGraph).Chart.SeriesCollection.NewSeries
            'データ範囲
            '系列名
            .Name = sh.Cells(2, 1).Value
        End With
        
        'グラフ位置指定
        With ActiveSheet.ChartObjects(numGraph)
            .Top = Range("A" & (((Continued) - 2) * 28 + 2)).Top
            .Left = Range("A" & (((Continued) - 2) * 15 + 2)).Left
        End With
        
        'グラフサイズ設定
        With ActiveSheet.ChartObjects
            .Height = 500
            .Width = 1400
        End With
        'グラフの表示位置を変更
        Continued = Continued + 1
        'ChartObjectsを増加させる
        numGraph = numGraph + 1
        'ループ終了
    Next i
    '1つ目の項目開始位置
    Count_Cell = Date_weight3 + 2
    '1つ目の項目終了位置
    Date_weight1 = Date_weight3 + Date_weight0
    '2つ目の項目終了位置
    Date_weight2 = Date_weight1 + Date_weight0
    '3つ目の項目終了位置
    Date_weight3 = Date_weight2 + Date_weight0
    '列の開始位置を初期化
    i = 6
Next aa
'シートを移動
Moving_seat
Judgment (Lost_Row)
End Sub
'###シート位置変更###
Public Sub Moving_seat()
    'graphシートを一番左に移動
    Worksheets("graph").Move Before:=Worksheets(1)
    'linegraph_createシートを一番右に移動
    Worksheets("起動ボタン").Move After:=Worksheets(Worksheets.Count)
    'graphシートを前面表示
    Sheets("graph").Select
MsgBox "完了しました"
End Sub
'「graph」の有無を確認しなければ作成しデータを削除
Public Sub Delete_sheet()
' 処理内容
For Each WS In Worksheets
    If WS.Name = "graph" Then
        Application.DisplayAlerts = False
        WS.Delete
        Application.DisplayAlerts = True
        Exit For
    End If
Next WS
End Sub
'時間が足りなければエラーを表示
Function Judgment(ByVal back As Long)
    If (back - 1) Mod 24 = 0 Then
    Else
        MsgBox "NG　時間が足りません"
    End If
End Function

